module fadder(x, y, cin, s, cout);   //bộ full adder
input x, y, cin;
output s, cout;
wire m1,m2,m3;
xor(m1,x,y);
xor(s,cin,m1);
and(m2,cin,m1);
and(m3,x,y);
or(cout,m3,m2);
endmodule

module add8b(a2, b2, ci2, s2, cout2);  ///bộ cộng trừ 8 bit
input[7:0] a2,b2;
input ci2; 
output[7:0] s2;
output cout2;
wire[6:0] w;
wire[7:0] t;
xor(t[0], b2[0], ci2);
xor(t[1], b2[1], ci2);
xor(t[2], b2[2], ci2);
xor(t[3], b2[3], ci2);
xor(t[4], b2[4], ci2);
xor(t[5], b2[5], ci2); 
xor(t[6], b2[6], ci2);
xor(t[7], b2[7], ci2);
fadder fadder1(a2[0], t[0], ci2, s2[0],w[0]);
fadder fadder2(a2[1], t[1], w[0], s2[1],w[1]);
fadder fadder3(a2[2], t[2], w[1], s2[2],w[2]);
fadder fadder4(a2[3], t[3], w[2], s2[3],w[3]);
fadder fadder5(a2[4], t[4], w[3], s2[4],w[4]);
fadder fadder6(a2[5], t[5], w[4], s2[5],w[5]);
fadder fadder7(a2[6], t[6], w[5], s2[6],w[6]);   
fadder fadder8(a2[7], t[7], w[6], s2[7],cout2);
endmodule

module add5b(a2, b2, ci2, s2, cout2);  // bo cong 8 bit
input[4:0] a2,b2;
input ci2; 
output[4:0] s2;
output cout2;
wire[3:0] w;
fadder fadder1(a2[0], b2[0], ci2, s2[0],w[0]);
fadder fadder2(a2[1], b2[1], w[0], s2[1],w[1]);
fadder fadder3(a2[2], b2[2], w[1], s2[2],w[2]);
fadder fadder4(a2[3], b2[3], w[2], s2[3],w[3]);
fadder fadder5(a2[4], b2[4], w[3], s2[4],cout2);
endmodule

module phannguyen_muduong(num, a, b); //gia tri phan nguyen voi so mu lon hon 127
input[22:0] a;
input[7:0] num;
output reg[23:0] b;
always @(a or num)
begin
case(num)	
	8'd0: b={23'b0,1'b1};
	8'd1: b={22'b0,1'b1,a[22]};
	8'd2: b={21'b0,1'b1,a[22:21]};
	8'd3: b={20'b0,1'b1,a[22:20]};
	8'd4: b={19'b0,1'b1,a[22:19]};
	8'd5: b={18'b0,1'b1,a[22:18]};
	8'd6: b={17'b0,1'b1,a[22:17]};
	8'd7: b={16'b0,1'b1,a[22:15]};
	8'd9: b={15'b0,1'b1,a[22:14]};
	8'd10: b={14'b0,1'b1,a[22:13]};
	8'd11: b={13'b0,1'b1,a[22:12]};
	8'd12: b={12'b0,1'b1,a[22:11]};
	8'd13: b={11'b0,1'b1,a[22:10]};
	8'd14: b={10'b0,1'b1,a[22:9]};
	8'd15: b={9'b0,1'b1,a[22:8]};
	8'd16: b={8'b0,1'b1,a[22:7]};
	8'd17: b={7'b0,1'b1,a[22:6]};
	8'd18: b={6'b0,1'b1,a[22:5]};
	8'd19: b={5'b0,1'b1,a[22:4]};
	8'd20: b={4'b0,1'b1,a[22:3]};
	8'd21: b={3'b0,1'b1,a[22:2]};
	8'd22: b={2'b0,1'b0,a[22:1]};
	8'd23: b={1'b0,a[22:0]};
	default: b=24'b0;
endcase
end
endmodule

module phantp_muduong(num,a,b);
input[7:0] num;
input[22:0] a;
input[7:0] num;
output reg[23:0] b;
always @(a or num)
begin
case(num)	
	8'd0: b={a[22:0],1'b0};
	8'd1: b={a[22:1],2'b0};
	8'd2: b={a[22:2],3'b0};
	8'd3: b={a[22:3],4'b0};
	8'd4: b={a[22:4],5'b0};
	8'd5: b={a[22:5],6'b0};
	8'd6: b={a[22:6],7'b0};
	8'd7: b={a[22:7],8'b0};
	8'd9: b={a[22:8],9'b0};
	8'd10: b={a[22:9],10'b0};
	8'd11: b={a[22:10],11'b0};
	8'd12: b={a[22:11],12'b0};
	8'd13: b={a[22:12],13'b0};
	8'd14: b={a[22:13],14'b0};
	8'd15: b={a[22:14],15'b0};
	8'd16: b={a[22:15],16'b0};
	8'd17: b={a[22:16],17'b0};
	8'd18: b={a[22:17],18'b0};
	8'd19: b={a[22:18],19'b0};
	8'd20: b={a[22:19],20'b0};
	8'd21: b={a[22:20],21'b0};
	8'd22: b={a[22:21],22'b0};
	8'd23: b={a[22],23'b0};
	default: b=24'b0;
endcase
end
endmodule

module phantp_muam(num, a, b);
input[22:0] a;
input[7:0] num;
output reg[23:0] b;
always @(a or num)
begin
case(num)	
	8'd0: b={1'b1,23'b0};
	8'd1: b={1'b1,a[22],22'b0};
	8'd2: b={1'b1,a[22:21],21'b0};
	8'd3: b={1'b1,a[22:20],20'b0};
	8'd4: b={1'b1,a[22:19],19'b0};
	8'd5: b={1'b1,a[22:18],18'b0};
	8'd6: b={1'b1,a[22:17],17'b0};
	8'd7: b={1'b1,a[22:15],16'b0};
	8'd9: b={1'b1,a[22:14],15'b0};
	8'd10: b={1'b1,a[22:13],14'b0};
	8'd11: b={1'b1,a[22:12],13'b0};
	8'd12: b={1'b1,a[22:11],12'b0};
	8'd13: b={1'b1,a[22:10],11'b0};
	8'd14: b={1'b1,a[22:9],10'b0};
	8'd15: b={1'b1,a[22:8],9'b0};
	8'd16: b={1'b1,a[22:7],8'b0};
	8'd17: b={1'b1,a[22:6],7'b0};
	8'd18: b={1'b1,a[22:5],6'b0};
	8'd19: b={1'b1,a[22:4],5'b0};
	8'd20: b={1'b1,a[22:3],4'b0};
	8'd21: b={1'b1,a[22:2],3'b0};
	8'd22: b={1'b0,a[22:1],2'b0,};
	8'd23: b={1'b0,a[22:0]};
	default: b=24'b0;
endcase
end
endmodule

module Rounding(X,exp,Y,expo);
input[22:0] X;
input[7:0] exp;
output[7:0] expo;
output[22:0] Y;
wire Cout, Cout1;
wire[23:0] t;
assign Y[17:0] = 18'b0;
add5b cong5b({1'b0,X[22:19]},5'b0,X[18],t[23:19],Cout);
add8b cong8b(exp,8'b0,t[23],expo,Cout1);
assign Y[22:19] = t[22:19];
assign Y[18]=1'b0;
endmodule	

module hadder(x, y, s, c);  // bộ cộng bán phần
input x,y;
output s,c;
xor(s,x,y);
and(c,x,y);
endmodule

module inc1(a,s,cin);   //bộ tăng 1
input[24:0] a;   
input cin;                 // Cin bằng 1 thì ngõ ra = ngõ vào + 1
wire[24:1] b;
output[24:0] s;
//output cout;
hadder hadder1(a[0],cin,s[0],b[1]);
hadder hadder2(a[1],b[1],s[1],b[2]);
hadder hadder3(a[2],b[2],s[2],b[3]);
hadder hadder4(a[3],b[3],s[3],b[4]);
hadder hadder5(a[4],b[4],s[4],b[5]);
hadder hadder6(a[5],b[5],s[5],b[6]);
hadder hadder7(a[6],b[6],s[6],b[7]);
hadder hadder8(a[7],b[7],s[7],b[8]);
hadder hadder9(a[8],b[8],s[8],b[9]);
hadder hadder10(a[9],b[9],s[9],b[10]);
hadder hadder11(a[10],b[10],s[10],b[11]);
hadder hadder12(a[11],b[11],s[11],b[12]);
hadder hadder13(a[12],b[12],s[12],b[13]);
hadder hadder14(a[13],b[13],s[13],b[14]);
hadder hadder15(a[14],b[14],s[14],b[15]);
hadder hadder16(a[15],b[15],s[15],b[16]);
hadder hadder17(a[16],b[16],s[16],b[17]);
hadder hadder18(a[17],b[17],s[17],b[18]);
hadder hadder19(a[18],b[18],s[18],b[19]);
hadder hadder20(a[19],b[19],s[19],b[20]);
hadder hadder21(a[20],b[20],s[20],b[21]);
hadder hadder22(a[21],b[21],s[21],b[22]);
hadder hadder23(a[22],b[22],s[22],b[23]);
hadder hadder24(a[23],b[23],s[23],b[24]);
hadder hadder25(a[24],b[24],s[24],cout);
endmodule

module bu2ifam(A,B);
input[24:0] A;
output[24:0] B;
wire[24:0] t;
not(t[0],A[0]);
not(t[1],A[1]);
not(t[2],A[2]);
not(t[3],A[3]);
not(t[4],A[4]);
not(t[5],A[5]);
not(t[6],A[6]);
not(t[7],A[7]);
not(t[8],A[8]);
not(t[9],A[9]);
not(t[10],A[10]);
not(t[11],A[11]);
not(t[12],A[12]);
not(t[13],A[13]);
not(t[14],A[14]);
not(t[15],A[15]);
not(t[16],A[16]);
not(t[17],A[17]);
not(t[18],A[18]);
not(t[19],A[19]);
not(t[20],A[20]);
not(t[21],A[21]);
not(t[22],A[22]);
not(t[23],A[23]);
not(t[24],A[24]);
inc1 increase1(t[24:0],B,1'b1);
endmodule

module pnguyen_lh23b(exp_in,exp_out,out);
	input wire [7:0]exp_in;  // mu_in
	output reg [6:0]exp_out; // mu thap phan b
	output reg [6:0]out;	 // hang so a thoa: a*10^b = 2^mu_in, 4bit dau bieu dien phan nguyen, 3 bit cuoi bieu dien thap phan
	
	always @(exp_in) begin
		case (exp_in)
			8'd24:begin exp_out=7'd7 ; out=7'b0001100; end
			8'd25:begin exp_out=7'd7 ; out=7'b0011011; end
			8'd26:begin exp_out=7'd7 ; out=7'b0110110; end
			8'd27:begin exp_out=7'd8 ; out=7'b0001011; end
			8'd28:begin exp_out=7'd8 ; out=7'b0010101; end
			8'd29:begin exp_out=7'd8 ; out=7'b0101011; end
			8'd30:begin exp_out=7'd9 ; out=7'b0001001; end
			8'd31:begin exp_out=7'd9 ; out=7'b0010010; end
			8'd32:begin exp_out=7'd9 ; out=7'b0100010; end
			8'd33:begin exp_out=7'd9 ; out=7'b1000101; end
			8'd34:begin exp_out=7'd10; out=7'b0001110; end
			8'd35:begin exp_out=7'd10; out=7'b0011100; end
			8'd36:begin exp_out=7'd10; out=7'b0110111; end
			8'd37:begin exp_out=7'd11; out=7'b0001011; end
			8'd38:begin exp_out=7'd11; out=7'b0010110; end
			8'd39:begin exp_out=7'd11; out=7'b0101100; end
			8'd40:begin exp_out=7'd12; out=7'b0001001; end
			8'd41:begin exp_out=7'd12; out=7'b0010001; end
			8'd42:begin exp_out=7'd12; out=7'b0100011; end
			8'd43:begin exp_out=7'd12; out=7'b1000111; end
			8'd44:begin exp_out=7'd13; out=7'b0001110; end
			8'd45:begin exp_out=7'd13; out=7'b0011100; end
			8'd46:begin exp_out=7'd13; out=7'b0111000; end
			8'd47:begin exp_out=7'd14; out=7'b0001100; end
			8'd48:begin exp_out=7'd14; out=7'b0010110; end
			8'd49:begin exp_out=7'd14; out=7'b0101101; end
			8'd50:begin exp_out=7'd15; out=7'b0001001; end
			8'd51:begin exp_out=7'd15; out=7'b0010010; end
			8'd52:begin exp_out=7'd15; out=7'b0100100; end
			8'd53:begin exp_out=7'd15; out=7'b1001000; end
			8'd54:begin exp_out=7'd16; out=7'b0001110; end
			8'd55:begin exp_out=7'd16; out=7'b0011101; end
			8'd56:begin exp_out=7'd16; out=7'b0111010; end
			8'd57:begin exp_out=7'd17; out=7'b0001100; end
			8'd58:begin exp_out=7'd17; out=7'b0010111; end
			8'd59:begin exp_out=7'd17; out=7'b0101110; end
			8'd60:begin exp_out=7'd18; out=7'b0001001; end
			8'd61:begin exp_out=7'd18; out=7'b0010010; end
			8'd62:begin exp_out=7'd18; out=7'b0100101; end
			8'd63:begin exp_out=7'd18; out=7'b1001010; end
			8'd64:begin exp_out=7'd19; out=7'b0001110; end
			8'd65:begin exp_out=7'd19; out=7'b0011101; end
			8'd66:begin exp_out=7'd19; out=7'b0111011; end
			8'd67:begin exp_out=7'd20; out=7'b0001100; end
			8'd68:begin exp_out=7'd20; out=7'b0011000; end
			8'd69:begin exp_out=7'd20; out=7'b0110000; end
			8'd70:begin exp_out=7'd21; out=7'b0001001; end
			8'd71:begin exp_out=7'd21; out=7'b0010011; end
			8'd72:begin exp_out=7'd21; out=7'b0100110; end
			8'd73:begin exp_out=7'd21; out=7'b1001100; end    //////Sửa tới đây r
			8'd74:begin exp_out=7'd22; out=32'h3f8e1bca; end   // tiếp theo
			8'd75:begin exp_out=7'd22; out=32'h400e1bca; end
			8'd76:begin exp_out=7'd22; out=32'h408e1bca; end
			8'd77:begin exp_out=7'd22; out=32'h410e1bca; end
			8'd78:begin exp_out=7'd23; out=32'h3fe35fa9; end
			8'd79:begin exp_out=7'd23; out=32'h40635fa9; end
			8'd80:begin exp_out=7'd23; out=32'h40e35fa9; end
			8'd81:begin exp_out=7'd24; out=32'h3fb5e621; end
			8'd82:begin exp_out=7'd24; out=32'h4035e621; end
			8'd83:begin exp_out=7'd24; out=32'h40b5e621; end
			8'd84:begin exp_out=7'd25; out=32'h3f9184e7; end
			8'd85:begin exp_out=7'd25; out=32'h401184e7; end
			8'd86:begin exp_out=7'd25; out=32'h409184e7; end
			8'd87:begin exp_out=7'd25; out=32'h411184e7; end
			8'd88:begin exp_out=7'd26; out=32'h3fe8d4a5; end
			8'd89:begin exp_out=7'd26; out=32'h4068d4a5; end
			8'd90:begin exp_out=7'd26; out=32'h40e8d4a5; end
			8'd91:begin exp_out=7'd27; out=32'h3fba43b7; end
			8'd92:begin exp_out=7'd27; out=32'h403a43b7; end
			8'd93:begin exp_out=7'd27; out=32'h40ba43b7; end
			8'd94:begin exp_out=7'd28; out=32'h3f9502f9; end
			8'd95:begin exp_out=7'd28; out=32'h401502f9; end
			8'd96:begin exp_out=7'd28; out=32'h409502f9; end
			8'd97:begin exp_out=7'd28; out=32'h411502f9; end
			8'd98:begin exp_out=7'd29; out=32'h3fee6b28; end
			8'd99:begin exp_out=7'd29; out=32'h406e6b28; end
			8'd100:begin exp_out=7'd29;out=32'h40ee6b28; end
			8'd101:begin exp_out=7'd30;out=32'h3fbebc20; end
			8'd102:begin exp_out=7'd30;out=32'h403ebc20; end
			8'd103:begin exp_out=7'd30;out=32'h40bebc20; end
			8'd104:begin exp_out=7'd31;out=32'h3f989680; end
			8'd105:begin exp_out=7'd31;out=32'h40189680; end
			8'd106:begin exp_out=7'd31;out=32'h40989680; end
			8'd107:begin exp_out=7'd31;out=32'h41189680; end
			8'd108:begin exp_out=7'd32;out=32'h3ff42400; end
			8'd109:begin exp_out=7'd32;out=32'h40742400; end
			8'd110:begin exp_out=7'd32;out=32'h40f42400; end
			8'd111:begin exp_out=7'd33;out=32'h3fc35000; end
			8'd112:begin exp_out=7'd33;out=32'h40435000; end
			8'd113:begin exp_out=7'd33;out=32'h40c35000; end
			8'd114:begin exp_out=7'd34;out=32'h3f9c4000; end
			8'd115:begin exp_out=7'd34;out=32'h401c4000; end
			8'd116:begin exp_out=7'd34;out=32'h409c4000; end
			8'd117:begin exp_out=7'd34;out=32'h411c4000; end
			8'd118:begin exp_out=7'd35;out=32'h3ffa0000; end
			8'd119:begin exp_out=7'd35;out=32'h407a0000; end
			8'd120:begin exp_out=7'd35;out=32'h40fa0000; end
			8'd121:begin exp_out=7'd36;out=32'h3fc80000; end
			8'd122:begin exp_out=7'd36;out=32'h40480000; end
			8'd123:begin exp_out=7'd36;out=32'h40c80000; end
			8'd124:begin exp_out=7'd37;out=32'h3fa00000; end
			8'd125:begin exp_out=7'd37;out=32'h40200000; end
			8'd126:begin exp_out=7'd37;out=32'h40a00000; end
			8'd127:begin exp_out=7'd38;out=32'h3f800000; end
			8'd128:begin exp_out=7'd38;out=32'h40000000; end
			8'd129:begin exp_out=7'd38;out=32'h40800000; end
			8'd130:begin exp_out=7'd38;out=32'h41000000; end
			8'd131:begin exp_out=7'd39;out=32'h3fcccccd; end
			8'd132:begin exp_out=7'd39;out=32'h404ccccd; end
			8'd133:begin exp_out=7'd39;out=32'h40cccccd; end
			8'd134:begin exp_out=7'd40;out=32'h3fa3d70a; end
			8'd135:begin exp_out=7'd40;out=32'h4023d70a; end
			8'd136:begin exp_out=7'd40;out=32'h40a3d70a; end
			8'd137:begin exp_out=7'd41;out=32'h3f83126f; end
			8'd138:begin exp_out=7'd41;out=32'h4003126f; end
			8'd139:begin exp_out=7'd41;out=32'h4083126f; end
			8'd140:begin exp_out=7'd41;out=32'h4103126f; end
			8'd141:begin exp_out=7'd42;out=32'h3fd1b717; end
			8'd142:begin exp_out=7'd42;out=32'h4051b717; end
			8'd143:begin exp_out=7'd42;out=32'h40d1b717; end
			8'd144:begin exp_out=7'd43;out=32'h3fa7c5ac; end
			8'd145:begin exp_out=7'd43;out=32'h4027c5ac; end
			8'd146:begin exp_out=7'd43;out=32'h40a7c5ac; end
			8'd147:begin exp_out=7'd44;out=32'h3f8637bd; end
			8'd148:begin exp_out=7'd44;out=32'h400637bd; end
			8'd149:begin exp_out=7'd44;out=32'h408637bd; end
			8'd150:begin exp_out=7'd44;out=32'h410637bd; end
			8'd151:begin exp_out=7'd45;out=32'h3fd6bf95; end
			8'd152:begin exp_out=7'd45;out=32'h4056bf95; end
			8'd153:begin exp_out=7'd45;out=32'h40d6bf95; end
			8'd154:begin exp_out=7'd46;out=32'h3fabcc77; end
			8'd155:begin exp_out=7'd46;out=32'h402bcc77; end
			8'd156:begin exp_out=7'd46;out=32'h40abcc77; end
			8'd157:begin exp_out=7'd47;out=32'h3f89705f; end
			8'd158:begin exp_out=7'd47;out=32'h4009705f; end
			8'd159:begin exp_out=7'd47;out=32'h4089705f; end
			8'd160:begin exp_out=7'd47;out=32'h4109705f; end
			8'd161:begin exp_out=7'd48;out=32'h3fdbe6ff; end
			8'd162:begin exp_out=7'd48;out=32'h405be6ff; end
			8'd163:begin exp_out=7'd48;out=32'h40dbe6ff; end
			8'd164:begin exp_out=7'd49;out=32'h3fafebff; end
			8'd165:begin exp_out=7'd49;out=32'h402febff; end
			8'd166:begin exp_out=7'd49;out=32'h40afebff; end
			8'd167:begin exp_out=7'd50;out=32'h3f8cbccc; end
			8'd168:begin exp_out=7'd50;out=32'h400cbccc; end
			8'd169:begin exp_out=7'd50;out=32'h408cbccc; end
			8'd170:begin exp_out=7'd50;out=32'h410cbccc; end
			8'd171:begin exp_out=7'd51;out=32'h3fe12e13; end
			8'd172:begin exp_out=7'd51;out=32'h40612e13; end
			8'd173:begin exp_out=7'd51;out=32'h40e12e13; end
			8'd174:begin exp_out=7'd52;out=32'h3fb424dc; end
			8'd175:begin exp_out=7'd52;out=32'h403424dc; end
			8'd176:begin exp_out=7'd52;out=32'h40b424dc; end
			8'd177:begin exp_out=7'd53;out=32'h3f901d7d; end
			8'd178:begin exp_out=7'd53;out=32'h40101d7d; end
			8'd179:begin exp_out=7'd53;out=32'h40901d7d; end
			8'd180:begin exp_out=7'd53;out=32'h41101d7d; end
			8'd181:begin exp_out=7'd54;out=32'h3fe69595; end
			8'd182:begin exp_out=7'd54;out=32'h40669595; end
			8'd183:begin exp_out=7'd54;out=32'h40e69595; end
			8'd184:begin exp_out=7'd55;out=32'h3fb877aa; end
			8'd185:begin exp_out=7'd55;out=32'h403877aa; end
			8'd186:begin exp_out=7'd55;out=32'h40b877aa; end
			8'd187:begin exp_out=7'd56;out=32'h3f9392ef; end
			8'd188:begin exp_out=7'd56;out=32'h401392ef; end
			8'd189:begin exp_out=7'd56;out=32'h409392ef; end
			8'd190:begin exp_out=7'd56;out=32'h411392ef; end
			8'd191:begin exp_out=7'd57;out=32'h3fec1e4a; end
			8'd192:begin exp_out=7'd57;out=32'h406c1e4a; end
			8'd193:begin exp_out=7'd57;out=32'h40ec1e4a; end
			8'd194:begin exp_out=7'd58;out=32'h3fbce508; end
			8'd195:begin exp_out=7'd58;out=32'h403ce508; end
			8'd196:begin exp_out=7'd58;out=32'h40bce508; end
			8'd197:begin exp_out=7'd59;out=32'h3f971da0; end
			8'd198:begin exp_out=7'd59;out=32'h40171da0; end
			8'd199:begin exp_out=7'd59;out=32'h40971da0; end
			8'd200:begin exp_out=7'd59;out=32'h41171da0; end
			8'd201:begin exp_out=7'd60;out=32'h3ff1c901; end
			8'd202:begin exp_out=7'd60;out=32'h4071c901; end
			8'd203:begin exp_out=7'd60;out=32'h40f1c901; end
			8'd204:begin exp_out=7'd61;out=32'h3fc16d9a; end
			8'd205:begin exp_out=7'd61;out=32'h40416d9a; end
			8'd206:begin exp_out=7'd61;out=32'h40c16d9a; end
			8'd207:begin exp_out=7'd62;out=32'h3f9abe15; end
			8'd208:begin exp_out=7'd62;out=32'h401abe15; end
			8'd209:begin exp_out=7'd62;out=32'h409abe15; end
			8'd210:begin exp_out=7'd62;out=32'h411abe15; end
			8'd211:begin exp_out=7'd63;out=32'h3ff79688; end
			8'd212:begin exp_out=7'd63;out=32'h40779688; end
			8'd213:begin exp_out=7'd63;out=32'h40f79688; end
			8'd214:begin exp_out=7'd64;out=32'h3fc61206; end
			8'd215:begin exp_out=7'd64;out=32'h40461206; end
			8'd216:begin exp_out=7'd64;out=32'h40c61206; end
			8'd217:begin exp_out=7'd65;out=32'h3f9e74d2; end
			8'd218:begin exp_out=7'd65;out=32'h401e74d2; end
			8'd219:begin exp_out=7'd65;out=32'h409e74d2; end
			8'd220:begin exp_out=7'd65;out=32'h411e74d2; end
			8'd221:begin exp_out=7'd66;out=32'h3ffd87b6; end
			8'd222:begin exp_out=7'd66;out=32'h407d87b6; end
			8'd223:begin exp_out=7'd66;out=32'h40fd87b6; end
			8'd224:begin exp_out=7'd67;out=32'h3fcad2f8; end
			8'd225:begin exp_out=7'd67;out=32'h404ad2f8; end
			8'd226:begin exp_out=7'd67;out=32'h40cad2f8; end
			8'd227:begin exp_out=7'd68;out=32'h3fa24260; end
			8'd228:begin exp_out=7'd68;out=32'h40224260; end
			8'd229:begin exp_out=7'd68;out=32'h40a24260; end
			8'd230:begin exp_out=7'd69;out=32'h3f81ceb3; end
			8'd231:begin exp_out=7'd69;out=32'h4001ceb3; end
			8'd232:begin exp_out=7'd69;out=32'h4081ceb3; end
			8'd233:begin exp_out=7'd69;out=32'h4101ceb3; end
			8'd234:begin exp_out=7'd70;out=32'h3fcfb11f; end
			8'd235:begin exp_out=7'd70;out=32'h404fb11f; end
			8'd236:begin exp_out=7'd70;out=32'h40cfb11f; end
			8'd237:begin exp_out=7'd71;out=32'h3fa6274c; end
			8'd238:begin exp_out=7'd71;out=32'h4026274c; end
			8'd239:begin exp_out=7'd71;out=32'h40a6274c; end
			8'd240:begin exp_out=7'd72;out=32'h3f84ec3d; end
			8'd241:begin exp_out=7'd72;out=32'h4004ec3d; end
			8'd242:begin exp_out=7'd72;out=32'h4084ec3d; end
			8'd243:begin exp_out=7'd72;out=32'h4104ec3d; end
			8'd244:begin exp_out=7'd73;out=32'h3fd4ad2e; end
			8'd245:begin exp_out=7'd73;out=32'h4054ad2e; end
			8'd246:begin exp_out=7'd73;out=32'h40d4ad2e; end
			8'd247:begin exp_out=7'd74;out=32'h3faa2425; end
			8'd248:begin exp_out=7'd74;out=32'h402a2425; end
			8'd249:begin exp_out=7'd74;out=32'h40aa2425; end
			8'd250:begin exp_out=7'd75;out=32'h3f881cea; end
			8'd251:begin exp_out=7'd75;out=32'h40081cea; end
			8'd252:begin exp_out=7'd75;out=32'h40881cea; end
			8'd253:begin exp_out=7'd75;out=32'h41081cea; end
			8'd254:begin exp_out=7'd76;out=32'h3fd9c7dd; end
			8'd255:begin exp_out=7'd82;out=32'h3f800000; end
		endcase
	end
endmodule		

	